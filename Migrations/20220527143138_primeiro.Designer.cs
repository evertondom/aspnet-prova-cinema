// <auto-generated />
using System;
using Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20220527143138_primeiro")]
    partial class primeiro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cinema.Models.Cine", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocalCinema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CinemaId");

                    b.ToTable("Cine");
                });

            modelBuilder.Entity("Cinema.Models.Filme", b =>
                {
                    b.Property<int>("FilmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaFilme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFilme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FilmeId");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Cinema.Models.Ingresso", b =>
                {
                    b.Property<int>("IngressoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("LocalCinema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFilme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessaoId")
                        .HasColumnType("int");

                    b.HasKey("IngressoId");

                    b.HasIndex("CinemaId");

                    b.HasIndex("FilmeId");

                    b.HasIndex("SessaoId");

                    b.ToTable("Ingresso");
                });

            modelBuilder.Entity("Cinema.Models.Sessao", b =>
                {
                    b.Property<int>("SessaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumAssento")
                        .HasColumnType("int");

                    b.Property<int>("NumSala")
                        .HasColumnType("int");

                    b.Property<string>("TipoIngresso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessaoId");

                    b.ToTable("Sessao");
                });

            modelBuilder.Entity("Cinema.Models.Ingresso", b =>
                {
                    b.HasOne("Cinema.Models.Cine", "Cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId");

                    b.HasOne("Cinema.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId");

                    b.HasOne("Cinema.Models.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Filme");

                    b.Navigation("Sessao");
                });
#pragma warning restore 612, 618
        }
    }
}
